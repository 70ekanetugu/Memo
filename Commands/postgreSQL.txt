[基本フロー]=================================================================
1．psql --version : バージョン確認
2. psql -h ホスト名 -U ユーザー名 -w  :ログイン
3. \q  :ログアウト
4. psql --username=ユーザー名(大体postgres) < 実行するsqlファイル名  ：sqlファイルの実行。

[SQL作成フロー]


[\コマンド]===================================================================
\q  : ログアウト
\l  : 作成済みのデータベース一覧表示
\du : 現在のユーザーを表示。
　　　ロール名(ユーザーとグループをまとめたもの)が表示される。
\c  : 現在接続しているdbから他のdbへ接続する。ex.「\c db名」
\dt : テーブル一覧表示
\d  : テーブル定義の確認。ex.「\d テーブル名」


[コマンド集]=================================================================
$psql [オプション]...[DB名 [ユーザー名]]
@一般オプション
 -d データベース名 ：接続するデータベース名の指定
 -c コマンド	   :１つだけsqlもしくは内部コマンド実行してexitする。
 -l		   : 有効なデータべ―ス一覧表示。その後exit
 -v NAME=VALUE	   : NAME変数にVALUEをセットする。 
 
@入出力オプション

@出力書式オプション

@接続オプション
 -h ホスト名　  :サーバホスト名またはソケット
 -p PORT	:ポートを指定
 -U ユーザー名　:ログインユーザー名
 -W		:パスワード


$pg_dump [オプション1] データベース名  [ > 出力先]
=>DB構造やデータをスクリプト又はアーカイブファイルとして、バックアップ/リストアするコマンド。
出力先は、オプションでもリダイレクトでもどっちでもおｋ。省略すると標準出力になる。
@オプション1
-f ファイル名　：　出力ファイルの指定。
-F 出力形式　　：　出力形式の指定。p/t/c(SQLスクリプトファイル(デフォルト)／tarアーカイブ／カスタムアーカイブ)
-a 	        : データのみをダンプし、スキーマはしない。
-s 		: スキーマのみをダンプし、データはしない。
-h ホスト名　　：　サーバが稼働しているマシンのホスト名を指定する。
-p 		: ポート指定
-U ユーザー名　: 接続するユーザー名を指定


$drop schema public cascade;
 create schema public;
=>ダンプ後、publicスキーマを消去する。(テーブル全部消したいとき)
　消した後、スキーマだけ作り直す。その後ダンプファイル使ってでリストアすればいい。


$psql_[オプション1] データベース名 [ < ファイル名]
=>指定ファイルをDBへリストアする。ファイル指定はダンプと同じで、オプションでもリダイレクトでもおｋ。


$ANALYZE
=>オプティマイザが実行計画を作成するための統計情報を生成する。
データ量が大きく変わったときの統計情報リフレッシュに使う。(データ統計が変わってる可能性大の為)

$EXPLAIN
=>実行するSQLに対してオプティマイザが作成した実行計画を表示する。SQLの実行計画を調べる時に使う。


[SQL]--------------------------------------------------------------
$select カラム　from DB名 [where...]
=>MySQLと基本的に同じ。

$create database db名　[encoding];
=>MySQLと同じ
@encoding エンコード名　:使用する文字エンコード指定可

$drop database db名;
=>同じ。データベース所有者のみ可能。

$create table テーブル名 (カラム名 データ型,以降同様...);
=>not null,primary key,defaultなども同じ。

$drop table テーブル1,テーブル2...;
=>同じ。末尾にCASCADE足すと依存するテーブルも消す。

$isnert into テーブル名 (カラム...) values(値,....);
=>同じ。

$update テーブル名 set カラム=式 [where 条件式];
=>同じ

$delete from テーブル名 where 条件式;
=>同じ


$insert into 〜〜〜 select 〜〜
=>selectした結果をテーブルにコピーできる。

[データ型]----------------------------------------------------------
@数値型
・integer        : 4バイト　-2,147,483,648〜2147483647整数
・smallint       : 2バイト　-32768〜32647整数
・bigint         : 8バイト　-9223372036854775808〜9223372036854775807整数
・real	       : 4バイト　浮動小数(6桁精度)
・double precision : 8バイト　浮動小数(15桁制度)

@文字型
・varchar[(n)] : 可変長　最大n文字の長さ。文字分だけ格納。上限越えはエラー。
・char[(n)] :固定長　指定文字列以下の場合、上限まで空白で埋められる。
・text : 可変長　長さ無制限。

@日付/時刻　※引数(p)は、秒の小数点以下の制度(0〜6で指定)
・date : 4バイト　日付
・time[(p)] : 8バイト　時刻。
・interval[(p)] :12バイト　時間間隔
・timestamp[(p)] :8バイト　日付と時刻療法

@ネットワークアドレス型
・cidr : 12or24バイト　IPv4 or IPv6ネットワーク
・inet : 12or24バイト　IPv4 or IPv6ホスト、ネットワーク
・macaddr : 6バイト　MACアドレス


@集合関数
・generate_sereies(1,10,5) ：連番を生成する関数。第１引数がスタート値、第２引数が終了値、第３引数が増減値。
　　　　　　　　　　　　　　例だと、1から10まで5刻みで生成となる。テストデータ作る時にどうぞ。

@COPY FROM文
=>CSVファイルの内容をテーブルにコピーする。



-----------------------------------------------------------------------------------------------------
インデックスについて

@BTREE
=>B木インデックス

@HASH

@RTREE

@GiST , SP-GiST, GIN

@BRIN

